openapi: 3.0.0
info:
  title: Colder Backend API
  description: API for Colder - AI-powered LinkedIn message generation with credit system and Stripe integration
  version: 1.0.0
  contact:
    name: Colder Support
    email: support@colder.app

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.colder.app
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        statusCode:
          type: integer
        message:
          type: string
        error:
          type: string
      required:
        - statusCode
        - message
        - error

    UserSettings:
      type: object
      properties:
        userName:
          type: string
        userRole:
          type: string
        userCompany:
          type: string
        userBackground:
          type: string
        userValueProposition:
          type: string

    UpdateSettingsDto:
      type: object
      properties:
        userName:
          type: string
        userRole:
          type: string
        userCompany:
          type: string
        userBackground:
          type: string
        userValueProposition:
          type: string

    TargetProfile:
      type: object
      required:
        - id
        - linkedinUrl
        - name
        - rawProfileText
      properties:
        id:
          type: string
        linkedinUrl:
          type: string
        name:
          type: string
        currentJobTitle:
          type: string
        currentCompany:
          type: string
        rawProfileText:
          type: string

    GenerateMessageDto:
      type: object
      required:
        - targetProfile
      properties:
        targetProfile:
          $ref: '#/components/schemas/TargetProfile'
        tone:
          type: string
          enum:
            - professional
            - casual
            - enthusiastic
            - formal
            - friendly
        purpose:
          type: string
          enum:
            - connection
            - coffee_chat
            - informational_interview
            - collaboration
            - job_inquiry
            - sales
            - custom
        customPurpose:
          type: string
          description: Required when purpose is 'custom'
        length:
          type: string
          enum:
            - short
            - medium
            - long

    PolishMessageDto:
      type: object
      required:
        - originalMessage
        - userFeedback
      properties:
        originalMessage:
          type: string
        userFeedback:
          type: string
        tone:
          type: string
          enum:
            - professional
            - casual
            - enthusiastic
            - formal
            - friendly
        length:
          type: string
          enum:
            - short
            - medium
            - long

    GenerateResponse:
      type: object
      properties:
        message:
          type: string
        creditsUsed:
          type: integer
        remainingCredits:
          type: integer

    CreditStatus:
      type: object
      properties:
        credits:
          type: integer
        plan:
          type: string
          enum:
            - free
            - pro
            - premium
        subscriptionStatus:
          type: string
          enum:
            - active
            - inactive
            - cancelled
            - past_due
        subscriptionEndDate:
          type: string
          format: date-time
          nullable: true

    SubscriptionStatus:
      type: object
      properties:
        plan:
          type: string
          enum:
            - free
            - pro
            - premium
        status:
          type: string
          enum:
            - active
            - inactive
            - cancelled
            - past_due
        endDate:
          type: string
          format: date-time
          nullable: true
        credits:
          type: integer

    CheckoutSession:
      type: object
      properties:
        url:
          type: string
          description: Stripe checkout or portal URL

security:
  - bearerAuth: []

paths:
  /:
    get:
      summary: Health check
      description: Verify the API is running
      tags:
        - Health
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            text/plain:
              schema:
                type: string
                example: Hello World!

  /settings:
    get:
      summary: Get user settings
      description: Retrieve settings for the authenticated user
      tags:
        - Settings
      responses:
        '200':
          description: User settings retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update user settings
      description: Update settings for the authenticated user
      tags:
        - Settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingsDto'
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /generate:
    post:
      summary: Generate message
      description: Generate a new personalized LinkedIn message
      tags:
        - Message Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateMessageDto'
      responses:
        '200':
          description: Message generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient credits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /generate/regenerate:
    post:
      summary: Regenerate message
      description: Regenerate a message with the same parameters
      tags:
        - Message Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateMessageDto'
      responses:
        '200':
          description: Message regenerated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient credits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /generate/polish:
    post:
      summary: Polish message
      description: Polish an existing message based on user feedback
      tags:
        - Message Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolishMessageDto'
      responses:
        '200':
          description: Message polished successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient credits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /credits/status:
    get:
      summary: Get credit status
      description: Get the current user's credit status
      tags:
        - Credits
      responses:
        '200':
          description: Credit status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditStatus'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /stripe/create-checkout-session:
    post:
      summary: Create checkout session
      description: Create a Stripe checkout session for subscription
      tags:
        - Stripe
      responses:
        '200':
          description: Checkout session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /stripe/create-portal-session:
    post:
      summary: Create portal session
      description: Create a Stripe customer portal session
      tags:
        - Stripe
      responses:
        '200':
          description: Portal session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /stripe/subscription-status:
    get:
      summary: Get subscription status
      description: Get detailed subscription status
      tags:
        - Stripe
      responses:
        '200':
          description: Subscription status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionStatus'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /stripe/webhook:
    post:
      summary: Stripe webhook
      description: Webhook endpoint for Stripe events
      tags:
        - Stripe
      security: []
      parameters:
        - in: header
          name: stripe-signature
          required: true
          schema:
            type: string
          description: Stripe webhook signature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  received:
                    type: boolean
        '400':
          description: Invalid webhook signature
          content:
            text/plain:
              schema:
                type: string

  /stripe/success:
    get:
      summary: Checkout success page
      description: Page shown after successful Stripe checkout
      tags:
        - Stripe
      security: []
      responses:
        '200':
          description: Success page HTML
          content:
            text/html:
              schema:
                type: string

  /stripe/cancel:
    get:
      summary: Checkout cancel page
      description: Page shown when user cancels Stripe checkout
      tags:
        - Stripe
      security: []
      responses:
        '200':
          description: Cancel page HTML
          content:
            text/html:
              schema:
                type: string

tags:
  - name: Health
    description: API health check endpoints
  - name: Settings
    description: User settings management
  - name: Message Generation
    description: AI-powered message generation endpoints
  - name: Credits
    description: Credit system management
  - name: Stripe
    description: Stripe payment and subscription endpoints